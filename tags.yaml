openapi: 3.0.3
info:
  title: ClientAPI - Invite Links (Tags)
  version: 1.0.0
servers:
  - url: https://clientapi-gateway.smitstat.ru
    description: Base URL for all API requests
paths:
  /tags:
    get:
      tags:
      - Tags
      summary: Get Tags
      description: 'Get all tags with filters
        !!! Пагинация отключена!!!'
      operationId: get_tags_tags_get
      security:
      - HTTPBearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
          title: Page
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          description: Количество элементов на странице. При отрицательном значении
            пагинация отключается
          default: 10
          title: Limit
        description: Количество элементов на странице. При отрицательном значении
          пагинация отключается
      - name: channel_id
        in: query
        required: true
        schema:
          type: integer
          title: Channel Id
      - name: name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      - name: ordered_fields
        in: query
        required: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/TagsOrder'
          description: Поля для сортировки. Список значений из TagsOrder.
          default:
          - -created_at
          title: Ordered Fields
        description: Поля для сортировки. Список значений из TagsOrder.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllTagsResponseDTO'
        '401':
          description: Unauthorized
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Tags
      summary: Create Tag
      description: Create tag
      operationId: create_tag_tags_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateDTO'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseDTO'
        '401':
          description: Unauthorized
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tags/types:
    get:
      tags:
      - Tags
      summary: Get Tag Types
      description: Get all tag types
      operationId: get_tag_types_tags_types_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagTypeDTO'
                type: array
                title: Response Get Tag Types Tags Types Get
        '401':
          description: Unauthorized
      security:
      - HTTPBearer: []
  /tags/{tag_id}:
    get:
      tags:
      - Tags
      summary: Get Tag
      description: Get tag by id
      operationId: get_tag_tags__tag_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Tag Id
      - name: channel_id
        in: query
        required: true
        schema:
          type: integer
          title: Channel Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseDTO'
        '401':
          description: Unauthorized
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Tags
      summary: Update Tag
      description: Update tag
      operationId: update_tag_tags__tag_id__patch
      security:
      - HTTPBearer: []
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Tag Id
      - name: channel_id
        in: query
        required: true
        schema:
          type: integer
          title: Channel Id
      - name: name
        in: query
        required: true
        schema:
          type: string
          title: Name
      - name: color
        in: query
        required: true
        schema:
          type: string
          title: Color
      - name: type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
          title: Type Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseDTO'
        '401':
          description: Unauthorized
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
  schemas:
    TagsOrder:
      title: TagsOrder
      type: string
      enum: 
        - name
        - created_at
        - -name
        - -created_at
    TagTypeDTO:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
      type: object
      required:
      - id
      - name
      title: TagTypeDTO
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    AllTagsResponseDTO:
      properties:
        page:
          type: integer
          title: Page
        limit:
          type: integer
          title: Limit
        total:
          type: integer
          title: Total
        items:
          items:
            $ref: '#/components/schemas/TagResponseDTO'
          type: array
          title: Items
      type: object
      required:
      - page
      - limit
      - total
      - items
      title: AllTagsResponseDTO
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    TagResponseDTO:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        color:
          type: string
          title: Color
        type:
          $ref: '#/components/schemas/TagTypeDTO'
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updated At
        channel_id:
          type: integer
          title: Channel Id
        links:
          items:
            $ref: '#/components/schemas/InviteLinkInTagDTO'
          type: array
          title: Links
      type: object
      required:
      - id
      - name
      - color
      - type
      - created_at
      - channel_id
      title: TagResponseDTO
    TagCreateDTO:
      properties:
        channel_id:
          type: integer
          title: Channel Id
        name:
          type: string
          title: Name
        color:
          type: string
          title: Color
        tag_type_id:
          type: string
          format: uuid
          title: Tag Type Id
      type: object
      required:
      - channel_id
      - name
      - color
      - tag_type_id
      title: TagCreateDTO
    InviteLinkInTagDTO:
      properties:
        id:
          type: string
          title: Id
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        invite_link:
          type: string
          title: Invite Link
        created_at:
          type: string
          format: date-time
          title: Created At
        budget:
          type: number
          title: Budget
        creator_id:
          anyOf:
          - type: integer
          - type: 'null'
          title: Creator Id
        is_bot_created:
          type: boolean
          title: Is Bot Created
      type: object
      required:
      - id
      - invite_link
      - created_at
      - budget
      - is_bot_created
      title: InviteLinkInTagDTO
    ErrorSchema:
      properties:
        detail:
          type: string
          title: Detail
      type: object
      required:
      - detail
      title: ErrorSchema
